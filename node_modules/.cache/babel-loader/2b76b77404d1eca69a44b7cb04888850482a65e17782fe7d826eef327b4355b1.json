{"ast":null,"code":"var _jsxFileName = \"/Users/samanehhajigholam/Library/CloudStorage/OneDrive-Seneca/Desktop/dojo-blog/src/Create.js\",\n  _s = $RefreshSig$();\n// import { useState } from \"react\";\n// import { useHistory } from \"react-router-dom\";\n\n// const Create = () => {\n\n//     const [title, setTitle] = useState('');\n//     const [body, setBody] = useState('');\n//     const [author, setAuthor] = useState('samaneh');\n//     const [isPending, setIsPending] = useState(false);\n//     const history = useHistory(); //we can use different methods on history obj. to go back or forward through history\n//     // submit event\n//     const handleSubmit = (e) => {\n//         e.preventDefualt();\n//         //store the data in the form to an obj\n//         const blog = { title, body, author };\n\n//         setIsPending(true);\n\n//         // make a POST request to the endpoint that we need to add a new blog(json server adds the id property automatically)\n//         fetch('http://localhost:8000/blogs', {\n//             method: 'POST',\n//             headers: {\"Content-Type\": \"application/json\"}, //type of the data we are sending\n//             body: JSON.stringify(blog) //actual data. turn the data from an obj. to a JSON string\n//         }).then(() => {\n//             console.log('new blog added');\n//             setIsPending(false);\n\n//             //history.go(-1); //go back one page to where the user were when add the new blog\n\n//             //redirect the user back to the home page once the new blog is added\n//             history.push('/');\n//         })\n//     }\n//     return (\n//         <div className=\"create\">\n//             <h2>Add a New Blog</h2>\n//             <form onSubmit={handleSubmit}>\n//                 <label>Blog Title</label>\n//                 <input\n//                     type=\"text\"\n//                     required\n//                     value={title}\n//                     onChange={(e) => setTitle(e.target.value)}\n//                 />\n//                 <label>Blog body:</label>\n//                 <textarea\n//                     required\n//                     value={body}\n//                     onChange={(e) => setBody(e.target.value)}\n//                 ></textarea>\n//                 <label>Blog author:</label>\n//                 <select\n//                     value={author}\n//                     onChange={(e) => setAuthor(e.target.value)}\n//                 >\n//                     <option value=\"samaneh\">samaneh</option>\n//                     <option value=\"rey\">rey</option>\n//                 </select>\n//                 { !isPending && <button>Add Blog</button> }\n//                 { isPending && <button disabled>Adding blog...</button> }\n//             </form>\n//         </div>\n//     );\n// }\n\n// export default Create;\n\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Create = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [author, setAuthor] = useState('mario');\n  const history = useHistory();\n  const handleSubmit = e => {\n    e.preventDefault();\n    const blog = {\n      title,\n      body,\n      author\n    };\n    fetch('http://localhost:8000/blogs/', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(blog)\n    }).then(() => {\n      // history.go(-1);\n      history.push('/');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a New Blog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Blog title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Blog body:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        required: true,\n        value: body,\n        onChange: e => setBody(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Blog author:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: author,\n        onChange: e => setAuthor(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"mario\",\n          children: \"mario\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"yoshi\",\n          children: \"yoshi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add Blog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(Create, \"hLiFGl7eBUctlONPUfdPH/a8h1Q=\", false, function () {\n  return [useHistory];\n});\n_c = Create;\nexport default Create;\nvar _c;\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"names":["useState","useHistory","jsxDEV","_jsxDEV","Create","_s","title","setTitle","body","setBody","author","setAuthor","history","handleSubmit","e","preventDefault","blog","fetch","method","headers","JSON","stringify","then","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","required","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/samanehhajigholam/Library/CloudStorage/OneDrive-Seneca/Desktop/dojo-blog/src/Create.js"],"sourcesContent":["// import { useState } from \"react\";\n// import { useHistory } from \"react-router-dom\";\n\n// const Create = () => {\n\n//     const [title, setTitle] = useState('');\n//     const [body, setBody] = useState('');\n//     const [author, setAuthor] = useState('samaneh');\n//     const [isPending, setIsPending] = useState(false);\n//     const history = useHistory(); //we can use different methods on history obj. to go back or forward through history\n//     // submit event\n//     const handleSubmit = (e) => {\n//         e.preventDefualt();\n//         //store the data in the form to an obj\n//         const blog = { title, body, author };\n\n//         setIsPending(true);\n\n//         // make a POST request to the endpoint that we need to add a new blog(json server adds the id property automatically)\n//         fetch('http://localhost:8000/blogs', {\n//             method: 'POST',\n//             headers: {\"Content-Type\": \"application/json\"}, //type of the data we are sending\n//             body: JSON.stringify(blog) //actual data. turn the data from an obj. to a JSON string\n//         }).then(() => {\n//             console.log('new blog added');\n//             setIsPending(false);\n\n//             //history.go(-1); //go back one page to where the user were when add the new blog\n\n//             //redirect the user back to the home page once the new blog is added\n//             history.push('/');\n//         })\n//     }\n//     return (\n//         <div className=\"create\">\n//             <h2>Add a New Blog</h2>\n//             <form onSubmit={handleSubmit}>\n//                 <label>Blog Title</label>\n//                 <input\n//                     type=\"text\"\n//                     required\n//                     value={title}\n//                     onChange={(e) => setTitle(e.target.value)}\n//                 />\n//                 <label>Blog body:</label>\n//                 <textarea\n//                     required\n//                     value={body}\n//                     onChange={(e) => setBody(e.target.value)}\n//                 ></textarea>\n//                 <label>Blog author:</label>\n//                 <select\n//                     value={author}\n//                     onChange={(e) => setAuthor(e.target.value)}\n//                 >\n//                     <option value=\"samaneh\">samaneh</option>\n//                     <option value=\"rey\">rey</option>\n//                 </select>\n//                 { !isPending && <button>Add Blog</button> }\n//                 { isPending && <button disabled>Adding blog...</button> }\n//             </form>\n//         </div>\n//     );\n// }\n \n// export default Create;\n\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Create = () => {\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [author, setAuthor] = useState('mario');\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const blog = { title, body, author };\n\n    fetch('http://localhost:8000/blogs/', {\n      method: 'POST',\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(blog)\n    }).then(() => {\n      // history.go(-1);\n      history.push('/');\n    })\n  }\n\n  return (\n    <div className=\"create\">\n      <h2>Add a New Blog</h2>\n      <form onSubmit={handleSubmit}>\n        <label>Blog title:</label>\n        <input \n          type=\"text\" \n          required \n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <label>Blog body:</label>\n        <textarea\n          required\n          value={body}\n          onChange={(e) => setBody(e.target.value)}\n        ></textarea>\n        <label>Blog author:</label>\n        <select\n          value={author}\n          onChange={(e) => setAuthor(e.target.value)}\n        >\n          <option value=\"mario\">mario</option>\n          <option value=\"yoshi\">yoshi</option>\n        </select>\n        <button>Add Blog</button>\n      </form>\n    </div>\n  );\n}\n \nexport default Create;"],"mappings":";;AAAA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,OAAO,CAAC;EAC7C,MAAMY,OAAO,GAAGX,UAAU,CAAC,CAAC;EAE5B,MAAMY,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,IAAI,GAAG;MAAEV,KAAK;MAAEE,IAAI;MAAEE;IAAO,CAAC;IAEpCO,KAAK,CAAC,8BAA8B,EAAE;MACpCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CX,IAAI,EAAEY,IAAI,CAACC,SAAS,CAACL,IAAI;IAC3B,CAAC,CAAC,CAACM,IAAI,CAAC,MAAM;MACZ;MACAV,OAAO,CAACW,IAAI,CAAC,GAAG,CAAC;IACnB,CAAC,CAAC;EACJ,CAAC;EAED,oBACEpB,OAAA;IAAKqB,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBtB,OAAA;MAAAsB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvB1B,OAAA;MAAM2B,QAAQ,EAAEjB,YAAa;MAAAY,QAAA,gBAC3BtB,OAAA;QAAAsB,QAAA,EAAO;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC1B1B,OAAA;QACE4B,IAAI,EAAC,MAAM;QACXC,QAAQ;QACRC,KAAK,EAAE3B,KAAM;QACb4B,QAAQ,EAAGpB,CAAC,IAAKP,QAAQ,CAACO,CAAC,CAACqB,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,eACF1B,OAAA;QAAAsB,QAAA,EAAO;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACzB1B,OAAA;QACE6B,QAAQ;QACRC,KAAK,EAAEzB,IAAK;QACZ0B,QAAQ,EAAGpB,CAAC,IAAKL,OAAO,CAACK,CAAC,CAACqB,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eACZ1B,OAAA;QAAAsB,QAAA,EAAO;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC3B1B,OAAA;QACE8B,KAAK,EAAEvB,MAAO;QACdwB,QAAQ,EAAGpB,CAAC,IAAKH,SAAS,CAACG,CAAC,CAACqB,MAAM,CAACF,KAAK,CAAE;QAAAR,QAAA,gBAE3CtB,OAAA;UAAQ8B,KAAK,EAAC,OAAO;UAAAR,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACpC1B,OAAA;UAAQ8B,KAAK,EAAC,OAAO;UAAAR,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eACT1B,OAAA;QAAAsB,QAAA,EAAQ;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAAxB,EAAA,CAjDKD,MAAM;EAAA,QAIMH,UAAU;AAAA;AAAAmC,EAAA,GAJtBhC,MAAM;AAmDZ,eAAeA,MAAM;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}