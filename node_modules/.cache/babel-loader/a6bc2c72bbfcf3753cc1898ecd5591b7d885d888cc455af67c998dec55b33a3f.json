{"ast":null,"code":"var _jsxFileName = \"/Users/samanehhajigholam/Library/CloudStorage/OneDrive-Seneca/Desktop/dojo-blog/src/Home.js\",\n  _s = $RefreshSig$();\n// import BlogList from \"./BlogList\";\n// import useFetch from \"./usefetch\";\n\n// const Home = () => {\n//     // destructure the three properties that get back return.\n//     // we can do -> data: blogs which means grab the data and use blogs name for it.(or we can just change blogs to data)\n//     const { data: blogs, isPending, error } = useFetch('http://localhost:8000/blogs');\n\n//     return (\n//         <div className=\"home\">\n//             {error && <div>{ error }</div>}\n//             {isPending && <div>Loading ...</div>}\n//             {blogs && <BlogList blogs={blogs} title=\"All Blogs!\" />}\n//         </div>\n//     );\n// }\n\n// export default Home;\n\n// // to run and watch the data using JSON server: \n// // npx json-server --watch data/db.json --port 8000\n\nimport BlogList from \"./BlogList\";\nimport useFetch from \"./usefetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const {\n    error,\n    isPending,\n    data: blogs\n  } = useFetch('http://localhost:8000/blogs');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 18\n    }, this), isPending && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 22\n    }, this), blogs && /*#__PURE__*/_jsxDEV(BlogList, {\n      blogs: blogs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"tt6m8L5096rlR5YsCEBmwI5jf34=\", false, function () {\n  return [useFetch];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["BlogList","useFetch","jsxDEV","_jsxDEV","Home","_s","error","isPending","data","blogs","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/samanehhajigholam/Library/CloudStorage/OneDrive-Seneca/Desktop/dojo-blog/src/Home.js"],"sourcesContent":["// import BlogList from \"./BlogList\";\n// import useFetch from \"./usefetch\";\n\n// const Home = () => {\n//     // destructure the three properties that get back return.\n//     // we can do -> data: blogs which means grab the data and use blogs name for it.(or we can just change blogs to data)\n//     const { data: blogs, isPending, error } = useFetch('http://localhost:8000/blogs');\n\n//     return (\n//         <div className=\"home\">\n//             {error && <div>{ error }</div>}\n//             {isPending && <div>Loading ...</div>}\n//             {blogs && <BlogList blogs={blogs} title=\"All Blogs!\" />}\n//         </div>\n//     );\n// }\n \n// export default Home;\n\n// // to run and watch the data using JSON server: \n// // npx json-server --watch data/db.json --port 8000\n\nimport BlogList from \"./BlogList\";\nimport useFetch from \"./usefetch\";\n\nconst Home = () => {\n  const { error, isPending, data: blogs } = useFetch('http://localhost:8000/blogs')\n\n  return (\n    <div className=\"home\">\n      { error && <div>{ error }</div> }\n      { isPending && <div>Loading...</div> }\n      { blogs && <BlogList blogs={blogs} /> }\n    </div>\n  );\n}\n \nexport default Home;"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,OAAOA,QAAQ,MAAM,YAAY;AACjC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM;IAAEC,KAAK;IAAEC,SAAS;IAAEC,IAAI,EAAEC;EAAM,CAAC,GAAGR,QAAQ,CAAC,6BAA6B,CAAC;EAEjF,oBACEE,OAAA;IAAKO,SAAS,EAAC,MAAM;IAAAC,QAAA,GACjBL,KAAK,iBAAIH,OAAA;MAAAQ,QAAA,EAAOL;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,EAC7BR,SAAS,iBAAIJ,OAAA;MAAAQ,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAClCN,KAAK,iBAAIN,OAAA,CAACH,QAAQ;MAACS,KAAK,EAAEA;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEV,CAAC;AAAAV,EAAA,CAVKD,IAAI;EAAA,QACkCH,QAAQ;AAAA;AAAAe,EAAA,GAD9CZ,IAAI;AAYV,eAAeA,IAAI;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}